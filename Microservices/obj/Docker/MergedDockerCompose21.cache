name: dockercompose15511116055247506388
services:
  customerdb:
    container_name: customer-db
    environment:
      MYSQL_ROOT_PASSWORD: "1111"
    image: mysql:8.0.29-oracle
    networks:
      backend: null
    ports:
    - mode: ingress
      target: 3306
      published: "18003"
      protocol: tcp
  customerwebapi:
    build:
      context: D:\project\c#\microservices_.net\Microservices
      dockerfile: CustomerWebApi/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      DB_HOST: customerdb
      DB_NAME: customer
      DB_SA_PASSWORD: "1111"
    image: customerwebapi
    networks:
      backend: null
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
    - mode: ingress
      target: 80
      published: "18004"
      protocol: tcp
  orderdb:
    container_name: order-db
    image: mongo
    networks:
      backend: null
    ports:
    - mode: ingress
      target: 27017
      published: "18007"
      protocol: tcp
  orderwebapi:
    build:
      context: D:\project\c#\microservices_.net\Microservices
      dockerfile: OrderWebApi/Dockerfile
    container_name: order-api
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      DB_HOST: orderdb
      DB_NAME: order
    image: orderwebapi
    networks:
      backend: null
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
  productdb:
    container_name: product-db
    environment:
      MYSQL_ROOT_PASSWORD: "1111"
    image: mysql:8.0.29-oracle
    networks:
      backend: null
    ports:
    - mode: ingress
      target: 3306
      published: "18005"
      protocol: tcp
  productwebapi:
    build:
      context: D:\project\c#\microservices_.net\Microservices
      dockerfile: ProductWebApi/Dockerfile
    container_name: product-api
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      DB_HOST: productdb
      DB_NAME: product
      DB_ROOT_PASSWORD: "1111"
    image: productwebapi
    networks:
      backend: null
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
    - mode: ingress
      target: 80
      published: "18002"
      protocol: tcp
networks:
  backend:
    name: dockercompose15511116055247506388_backend